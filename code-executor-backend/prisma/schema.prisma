// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User{
  id Int @id @default(autoincrement())
  name String @unique
  email String @unique
  password String
  executionHistories ExecutionHistory[]
  folders Folder[]


  
}

model ExecutionHistory {

  id        Int      @id @default(autoincrement()) // Auto-incrementing integer ID
  userId    Int      // Store the ID of the user who executed the code
  code      String   // The executed code
  language  String   // Programming language (Python, Node.js, Go)
  output    String  @db.Text()  // Output from the execution // Increase column size to TEXT
  createdAt DateTime @default(now())
  
  // Relationship with User (Assuming you have a User model)
  user User @relation(fields: [userId], references: [id])
}

model Folder{

  id Int @id @default(autoincrement())
  name String @unique
  userId Int
  files File[]
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model File{

  id Int @id @default(autoincrement())
  name String
  content String @db.Text()
  folderId Int
  filePath String
  folder Folder @relation(fields: [folderId], references: [id], onDelete: Cascade)

  @@unique([name, folderId]) // Ensure file names are unique inside a folder
}